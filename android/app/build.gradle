plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.example.just_appartment_live"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    packagingOptions {
        // Fixes duplicate libraries build issue, especially when your project uses more than one plugin that depend on C++ libs.
        pickFirst 'lib/**/libc++_shared.so'
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        applicationId "net.justapartments.app" // Your appâ€™s unique identifier
      //  minSdk = flutter.minSdkVersion // Uses Flutter's specified min SDK version
       
        minSdk=24
        targetSdk = flutter.targetSdkVersion // Uses Flutter's specified target SDK version
        versionCode = flutter.versionCode // Version code from Flutter
        versionName = flutter.versionName // Version name from Flutter
    }

    signingConfigs {
        release {
            // Signing configuration to use your keystore
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release // Apply the signing config for release build
            minifyEnabled true // Enables code shrinking and obfuscation for release builds
            shrinkResources true // Removes unused resources in the release build
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro' // ProGuard settings
        }
    }
}

flutter {
    source = "../.." // Defines the path to your Flutter project
}

// Dependencies for Google Sign-In or Firebase if necessary
dependencies {
    implementation platform('com.google.firebase:firebase-bom:32.0.0') // Adjust version as necessary
    implementation 'com.google.firebase:firebase-auth' // Include Firebase Auth if you are using it
    implementation 'com.google.android.gms:play-services-auth:20.6.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.10' // 
}

apply plugin: 'com.google.gms.google-services'